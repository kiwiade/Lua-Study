-----------------------------------------------------------------------------
--
-- 2 타입과 값
--
-- 루아는 동적 타입 언어.
-- 변수 선언시 타입을 지정하지 않음.
-- 8가지 기본 타입인 nil, boolean, number, string, userdata, function, thread, table
-- 루아에서는 함수도 값처럼 다룰 수 있다.
--
-----------------------------------------------------------------------------
--
-- 2.1 Nil
--
-- nil 타입은 nil이라는 한 가지 값만 있는 타입
-- 값이 없는 상태를 나타낼 때 사용
-- 전역 변수는 기본값으로 nil을 가지고 있고, nil을 할당하여 안 쓰는 변수를 삭제가능
--
-----------------------------------------------------------------------------
--
-- 2.2 불리언(boolean)
--
-- 참, 거짓을 표현하는 true, false 두 가지 값을 가짐
-- 하지만 루아에서는 false나 nil은 거짓
-- 그 외 다른 값은 모두 참. (즉 0과 ""도 참임)
--
-----------------------------------------------------------------------------
--
-- 2.3 실수
--
-- 루아는 정수 타입이 따로 없다.
-- 실수타입으로도 정수는 정확히 표현됨
-- 숫자 상수는 실수부에 지수부를 더하는 형태도 가능(4.57e-3)
--
-- 4	0.4		4.57e-3		5E+20	0xff	0x1p-1
--
-----------------------------------------------------------------------------
--
-- 2.4 문자열
--
-- 문자열의 한글자는 8비트로 표현
-- 루아의 문자열은 수정할 수 없는(immutable) 값
-- 길이 연산자인 #을 써서 문자열의 길이를 얻을 수 있다.
-- 
-- a = "hello"
-- print(#a)  --> 5
--
--
-- * 2.4.1 문자열 상수
-- 
-- 작은 따옴표나 큰 따옴표로 둘러싸서 문자열 상수를 표시
-- a = "a line"
-- b = 'another line'
-- 의미는 같지만, 서로 다른 쪽을 문자열 안에서 이스케이프 문자없이 사용가능("a 'line'")
--
--
-- * 2.4.2 구간 문자열
-- 
-- 구간 주석처럼 대괄호 2개로 감싸서 문자열 상수를 표현 가능
-- 이렇게 대괄호로 표현된 문자열은 여러 줄로 작성 가능하고, 이스케이프 문자도 해석하지 않는다.
-- 코드의 일부분을 담을 때 편리
-- 열린 대괄호 사이에 =기호를 추가하면(원하는 만큼) 닫힌 대괄호 사이에 그 개수만큼 있어야 끝남.
-- (즉 [==[로 시작해서 ]==]로 끝날 수도 있다는 의미)
--
--
-- * 2.4.3 강제 변환
-- 
-- 루아는 숫자와 문자열 사이의 자동 변환을 지원함.
-- "10" + 1 	--> 11
-- "10 + 1" 	--> 10 + 1
-- "hello" + 1 	--> ERROR
--
-- .. 을 이용하여 문자열을 이어 붙일 수 있다.
-- 10 .. 20		--> 1020
-- tonumber(), tostring() 함수를 이용하여 실수나 문자열로 변환 가능하다.
--
-----------------------------------------------------------------------------
--
-- 2.5 테이블
-- 
-- 테이블 타입은 연관 배열의 구현체
-- 배열의 인덱스로 실수 외에도 nil을 제외한 나머지 모든 값을 쓸 수 있음
-- 테이블은 변수도, 값도 아닌 객체
-- 전역변수와 마찬가지로 초기화되지 않은 필드의 값은 nil, nil을 대입하면 필드가 삭제
--
-- a["name"]을 a.name으로 쓸 수 있음
-- 하지만 a.x와 a[x]는 다르다! (x가 10이면 a["10"]과 a[10]의 차이) -- 인덱스가 실수냐 문자열이냐 다름
--
-----------------------------------------------------------------------------
--
-- 2.6 함수
-- 
-- 루아의 함수는 1급 값. 
-- 변수에 저장할 수 있고 인자로 넘길 수 있으며 함수를 반화 받을 수도 있음
--
-----------------------------------------------------------------------------
--
-- 2.7 유저데이터와 스레드
-- 
-- 유저데이터 타입으로 임의의 C 데이터를 루아 변수에 저장가능.
--
-----------------------------------------------------------------------------

-- 연습문제 2.1
-- type(nil) == nil의 계산 결과는?
print(type(nil) == nil)

-- 예상 정답 : type(nil)은 문자열 "nil"이 반환 될 것이라 예상되어 false가 나올 것.
-- 실제 정답 : false / 실제로도 그랬다.


-- 연습문제 2.6
-- 다음 코드에서 a.a.a.a의 결과는 무엇인가?
a = {}
a.a = a

print(a)
print(a.a)
print(a.a.a)
print(a.a.a.a)

-- 예상 정답 : a.a=a 인데 거기서 .a면 nil이 아닐까? 
-- 실제 정답 : 4개 다 a의 테이블 주소를 가르킴.
-- 
-- 예상밖의 결과였다.
-- a는 a테이블의 주소를 가르켰고
-- a.a도 a기 때문에 a의 주소를 가르켰다.
-- 그렇기에 a.a.a도 a고 a.a.a.a도 a를 나타내어 모두 같은 a의 주소를 나타내었다.